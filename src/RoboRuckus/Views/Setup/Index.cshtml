@model RoboRuckus.Models.setupViewModel
@{
    ViewData["Title"] = "Setup";
}
<div class="row">
    @using (Html.BeginForm("setupGame", "Setup", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, false, new { @class = "", role = "form", @id="setupForm"}))
    {

        <h4>Setup Game</h4>
        <div>
            @Html.ValidationSummary(true, "Please enter an integer between 1 and 12", new { @class = "" })
            <div class="">
                @Html.LabelFor(m => m.numberOfPlayers, new { @class = "" })
                <div class="">
                    @Html.TextBox("numberOfPlayers", Model.numberOfPlayers == 0 ? 4 : Model.numberOfPlayers, new { @class = "",  type = "number", max = "12", min = "1"})
                    @Html.ValidationMessageFor(m => m.numberOfPlayers, "", new { @class = "" })
                </div>
            </div>
            <br />
            <div class="inline">
                @Html.DropDownListFor(m => m.selBoard, Model.boards, "Choose a Board", new { @id = "boardSel" })
                @Html.ValidationMessageFor(m => m.selBoard, "", new { @class = "" })
            </div>
            <div class="clear"></div>
            <div id="board" class="left" data-sizes='@(ViewBag.sizes)'></div>
            <div id="flagContainer" class="left ui-helper-reset">
                <div id="flag1" data-number="1" class="flags ">
                    <p>1 &#x2690;</p>
                </div>
                <div id="flag2" data-number="2" class="flags">
                    <p>2 &#x2690;</p>
                </div>
                <div id="flag3" data-number="3" class="flags">
                    <p>3 &#x2690;</p>
                </div>
                <div id="flag4" data-number="4" class="flags">
                    <p>4 &#x2690;</p>
                </div>
            </div>
            <div id="flagError">
                
            </div>
            @Html.TextBoxFor(m => m.flags, new { @class = "", type = "text", @id="flagString", @style="display: none"})
            <div class="clear">
                <br>
                <div id="">
                    <div class="inline" id="edgeControlContainer">
                        @Html.CheckBoxFor(m => m.edgeControlEnabled, new { @class = "uiCheckbox" }) 
                        @Html.LabelFor(m => m.edgeControlEnabled, new { @class = "" })
                    </div>
                    <div class="inline" id="showRegisterContainer">
                        @Html.CheckBoxFor(m => m.showRegistersEnabled, new { @class = "uiCheckbox" }) 
                        @Html.LabelFor(m => m.showRegistersEnabled, new { @class = "" })
                    </div>
                </div>
                 <div class="clear"></div>
                 <br>
                <input id="submitButton" type="submit" value="Setup" class="" />
            </div>
        </div>
    }
</div>
<br />
<div>
    <a id="tuningModeBtn" class="linkButtons" style="display: inline-block;" href="/Setup/Tuning">Tune Robots</a>
    <a id="boardMakerBtn" class="linkButtons" style="display: inline-block;" href="/Setup/boardMaker">Board Maker</a></div>
@section Scripts {
    <script src="@Url.Content("~/lib/jquery-validation/jquery.validate.js")"></script>
    <script src="@Url.Content("~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js")"></script>
    <script type="text/javascript" src=@Url.Content("~/Scripts/setup.js")></script>
}