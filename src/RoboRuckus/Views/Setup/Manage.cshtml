@model RoboRuckus.Models.manageViewModel
@{
    ViewData["Title"] = "Manage Player";
}

@section Scripts {
    <script type="text/javascript" src=@Url.Content("~/Scripts/manage.js")></script>
}

@using (Html.BeginForm("updatePlayer", "Setup", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, false, new { @class = "", role = "form", @id = "playerForm" }))
{
    @Html.LabelFor(m => m.lives, new { @class = "" })
    <div>
        @Html.TextBoxFor(m => m.lives, new { @class = "", @id = "lives", type = "number" })
    </div>
    <br />
    @Html.LabelFor(m => m.damage, new { @class = "" })
    <div>
        @Html.TextBoxFor(m => m.damage, new { @class = "", @id = "damage", type = "number" })
    </div>
    <br />
    @Html.LabelFor(m => m.flags, new { @class = "" })
    <div>
        @Html.TextBoxFor(m => m.flags, new { @class = "", @id = "flags", type = "number" })
    </div>
    <br />
    @Html.LabelFor(m => m.botX, new { @class = "" })
    <div>
        @Html.TextBoxFor(m => m.botX, new { @class = "", @id = "botX", type = "number" })
    </div>
    <br />
    @Html.LabelFor(m => m.botY, new { @class = "" })
    <div>
        @Html.TextBoxFor(m => m.botY, new { @class = "", @id = "botY", type = "number" })
    </div>
    <br />
    @Html.LabelFor(m => m.botDir, new { @class = "" })
    <div>
        @Html.DropDownListFor(m => m.botDir, Html.GetEnumSelectList(typeof(RoboRuckus.RuckusCode.Robot.orientation)))
    </div>
    <br />
    @Html.LabelFor(m => m.botName, new { @class = "" })
    <div>
        <select data-names="@ViewBag.bots" id="bots" name="botName"></select>
    </div>
    <br />
    <div class="">
        <input id="button" type="submit" value="Update Player" class="" style="display: inline-block" />
        <button id="dealMe" type="button" style="display: inline-block" class="">Re-deal Player</button>
    </div>
    @Html.HiddenFor(m => m.player, new { @class = "", @id = "player" })
}

